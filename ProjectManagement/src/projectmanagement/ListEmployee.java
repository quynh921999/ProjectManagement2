/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectmanagement;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author quynh
 */
public class ListEmployee extends javax.swing.JFrame {

    /**
     * Creates new form ListEmployee
     */
    public ListEmployee() {
        initComponents();
        showListEmployee();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Windows = new javax.swing.JPanel();
        tableEmp = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Windows.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Windows.setLayout(new java.awt.CardLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "fullname", "division", "Number_of_project", "Number_of_task"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("List Employee");

        javax.swing.GroupLayout tableEmpLayout = new javax.swing.GroupLayout(tableEmp);
        tableEmp.setLayout(tableEmpLayout);
        tableEmpLayout.setHorizontalGroup(
            tableEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tableEmpLayout.createSequentialGroup()
                .addContainerGap(221, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(283, 283, 283))
        );
        tableEmpLayout.setVerticalGroup(
            tableEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tableEmpLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Windows.add(tableEmp, "card3");

        jButton1.setBackground(new java.awt.Color(255, 51, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addComponent(Windows, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(Windows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public ArrayList<Employee> getListEmployee(){
        ArrayList<Employee> list = new ArrayList<>();
        String divi = "Employee";
        String sql = "select * from login where Division = ?";
        try {
            login.dbc.ps = login.dbc.conn.prepareStatement(sql);
            login.dbc.ps.setString(1, divi);
            login.dbc.rs = login.dbc.ps.executeQuery();
        } catch (SQLException ex) {
            Logger.getLogger(ex.getMessage());
        } 
        try {
            while(login.dbc.rs.next()){
                String name = login.dbc.rs.getString("fullName");
                String division = login.dbc.rs.getString("workAs");
                int id = login.dbc.rs.getInt("ID");
                Employee employee = new Employee(name, division, id);
                list.add(employee);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ListEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        return list;
    }
    public ArrayList<Integer> convert(String temp){
        String[] empID = temp.split(",");
        int[] empIDint = new int[empID.length];
        for(int k = 0; k < empID.length; k++){
            empIDint[k] = Integer.parseInt(empID[k]);
        }
        ArrayList<Integer> empIDs = new ArrayList<>();
        for(int i = 0; i < empIDint.length; i++){
            empIDs.add(empIDint[i]);
        }
        return empIDs;
    }
    
    public void showListEmployee(){
        ArrayList<Employee> listEmp = getListEmployee();
        ListProject listProject = new ListProject();
        ArrayList<Project> list = listProject.listProj();
  
        int[] countProj = new int[listEmp.size()];
        for(int i = 0; i < listEmp.size(); i++){
            countProj[i] = 0;
        }
        int[] countTask = new int[listEmp.size()];
        for(int i = 0; i < listEmp.size(); i++){
            countTask[i] = 0;
        }
        for(int i = 0; i < listEmp.size(); i++){
            for (Project proj1 : list) {
                ArrayList<Integer> empIDs = convert(proj1.getEmployeeIds());
                if(empIDs.contains(listEmp.get(i).getId())){
                    countProj[i] ++;
                }
            }
        }
        String sql = "select * from task";
        try {
            login.dbc.st = login.dbc.conn.createStatement();
            login.dbc.rs = login.dbc.st.executeQuery(sql);
        } catch (SQLException ex) {
            Logger.getLogger(ListEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            
                while(login.dbc.rs.next()){
                String idDev = login.dbc.rs.getString("developerIDs");
                String idTest = login.dbc.rs.getString("testerIDs");
                    for(int i = 0; i < listEmp.size(); i++){
                        ArrayList<Integer> idDeve = convert(idDev);
                    ArrayList<Integer> idTester = convert(idTest);
                    if(idDeve.contains(listEmp.get(i).getId()) || idTester.contains(listEmp.get(i).getId()))
                        countTask[i] ++;
                    }
                }
 
        } catch (SQLException ex) {
            Logger.getLogger(ListEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Object[] rows = new Object[4];
        for(int i = 0; i < listEmp.size(); i++){
            rows[0] = listEmp.get(i).getName();
            rows[1] = listEmp.get(i).getDivision();
            rows[2] = countProj[i];
            rows[3] = countTask[i];
            model.addRow(rows);
        }
        
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new MainMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Windows;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel tableEmp;
    // End of variables declaration//GEN-END:variables
}
